运算符――三目运算符
由三个运算数或表达式组成的结构
条件表达式？表达式1：表达式2
如果条件表达式为true，执行表达式1；
如果条件表达式为false，执行表达式2；
2.两个浏览器端函数
alert()   弹出警示框
prompt()  弹出提示(输入)框，输入的值是字符串类型
3.流程控制
程序=数据+算法 
程序分为顺序执行、选择执行、循环执行
（1）if语句
语句1：
 if(条件表达式){ 
      语句2；
}
语句3；
①执行语句1
②如果条件表达式为true，执行语句2
③执行语句3
（2）if-else语句
语句1；
if(条件表达式){
   语句2；
}else{
   语句3；
}
   语句4；
执行过程：
①执行语句1
②执行条件表达式，如果是true，执行语句2；如果是false，执行语句3
③执行语句4；
练习1：声明变量保存成绩，如果超过60分，打印及格；否则打印不及格。
练习2：声明两个变量存储账号密码，如果账号是root，并且密码是123456，打印登录成功；否则打印登录失败。
练习3：使用弹出提示框分别输入商品的价格和数量，如果总价满500打9折，打印应付金额；使用变量存储当前会员卡的余额，如果余额足够支付，打印支付成功，否则打印余额不足。
如果if和else后的大括号中只有一行代码，则大括号可以省略
if(score>=60) console.log("及格");
条件表达式中几个特殊的情况
undefined、null、0、""、NaN 在条件表达式中都表示false
（3）if-else 嵌套
用于判断多种情况
语句0；
if(条件表达式1){
  语句1；
}else if(条件表达式2){
语句2；
}else ... if(条件表达式n){
  语句n；
}else{
  语句n+1；//以上所有的条件表达式均为false
}
执行过程：
①执行语句0
②执行条件表达式1
     如果条件表达式1为true，执行语句1
     如果条件表达式1为false，执行条件表达式2
          如果条件表达式2为true，执行语句2
          如果条件表达式2为false，执行条件表达式n
③如果以上所有的条件表达式都为false，执行语句n+1
（4）switch-case
和if-else 类似，是一种特殊的多项分支语句
语句0；
switch(表达式){
	case 1:      //如果表达式的值为1
	语句1....
	break;
	...
	case n...
	语句n...
	break;
	default:
	语句n+1;   //以上所有的条件都是false
}
说明：表达式和case中的值比较的时候使用的是全等于(===)。
对比 if-else嵌套和switch-case语句
相同点：两者都可以用于多项分支语句
不同点：if-else既可以判断相等，又可以判断不相等，适用范围比较广；switch-case 只适用于全等的情况;在结构上更为清晰合理，执行效率相对比较高。
2.循环执行
循环：就是一遍又一遍执行相同或者相似的代码
循环的两个要素
   循环的条件：控制循环的次数
   循环体：重复执行的相同或者相似代码
while循环
while(循环条件){
  循环体
}
课后任务：
（1）复习今天的内容，整理思维导图
（2）练习：
      使用switch-case判断一个人的成绩标准（分数/10，取整）
	100
	90~100以下
	80~90以下....
	使用循环打印  10~1
	使用循环打印 20 22 24 26 28 30
（3）预习do-while、for循环
	